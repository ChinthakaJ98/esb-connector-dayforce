<!--
  ~ Copyright (c) 2020-2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<template xmlns="http://ws.apache.org/ns/synapse" name="patchOrgUnits">
    <parameter name="isValidateOnly"/>
    <parameter name="xRefCode"/>
    <parameter name="fieldAndValue"/>
    <parameter name="replaceExisting"/>
    <parameter name="calibrateOrg"/>
    <sequence>
        <property value="application/json" name="accept" scope="transport"/>
        <property expression="fn:concat('Basic ',$ctx:ceridianDayForceAuthHeader)" name="Authorization"
                  scope="transport"/>
        <property name="uri.var.xRefCode" expression="$func:xRefCode"/>
        <property name="uri.var.isValidateOnly" expression="$func:isValidateOnly"/>
        <property name="Accept-Encoding" scope="transport" action="remove"/>
        <property name="uri.var.fieldAndValue" expression="$func:fieldAndValue"/>
        <property name="uri.var.query_params" value=""/>
        <payloadFactory media-type="json">
            <format>
                $1
            </format>
            <args>
                <arg expression="$ctx:uri.var.fieldAndValue"/>
            </args>
        </payloadFactory>
        <filter source="boolean($func:isValidateOnly)" regex="false">
            <then>
                <log category="ERROR" level="custom">
                    <property name="CERIDIAN Dayforce"
                              value="isValidateOnly parameter is mandatory for accessing patch Org Unit resource."/>
                </log>
            </then>
        </filter>
        <!-- Filter each query parameter and append to query parameters list if they are not empty-->
        <filter source="boolean($func:replaceExisting)" regex="true">
            <then>
                <property name="uri.var.query_params"
                          expression="fn:concat($ctx:uri.var.query_params,'replaceExisting=',
                          $func:replaceExisting,'&amp;')"/>
            </then>
        </filter>
        <filter source="boolean($func:calibrateOrg)" regex="true">
            <then>
                <property name="uri.var.query_params"
                          expression="fn:concat($ctx:uri.var.query_params,'calibrateOrg=',
                          $func:calibrateOrg,'&amp;')"/>
            </then>
        </filter>
        <!--Add ? and remove tailing &-->
        <filter source="boolean($ctx:uri.var.query_params)" regex="true">
            <then>
                <property name="uri.var.query_params"
                          expression="fn:concat('?isValidateOnly=', $ctx:uri.var.isValidateOnly, '&amp;', $ctx:uri.var.query_params)"/>
                <property name="query_params_length"
                          expression="fn:string-length($ctx:uri.var.query_params)"/>
                <property name="uri.var.query_params"
                          expression="fn:substring($ctx:uri.var.query_params, 1,
                          $ctx:query_params_length -1 )"/>
            </then>
            <else>
                <property name="uri.var.query_params"
                          expression="fn:concat('?isValidateOnly=', $ctx:uri.var.isValidateOnly)"/>
            </else>
        </filter>
        <filter source="$ctx:dayforceRestBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="patch"
                              uri-template="https://{+uri.var.clientNamespace}/{uri.var.apiVersion}/OrgUnits/{+uri.var.xRefCode}{+uri.var.query_params}">
                            <timeout>
                                <duration>{$ctx:httpRequestTimeout}</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <errorCodes>-1</errorCodes>
                                <initialDuration>0</initialDuration>
                                <progressionFactor>1</progressionFactor>
                                <maximumDuration>0</maximumDuration>
                            </suspendOnFailure>
                            <markForSuspension>
                                <errorCodes>-1</errorCodes>
                            </markForSuspension>
                        </http>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="patch"
                              uri-template="https://{+uri.var.clientNamespace}/{uri.var.apiVersion}/OrgUnits/{+uri.var.xRefCode}{+uri.var.query_params}">
                            <timeout>
                                <duration>{$ctx:httpRequestTimeout}</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <errorCodes>-1</errorCodes>
                                <initialDuration>0</initialDuration>
                                <progressionFactor>1</progressionFactor>
                                <maximumDuration>0</maximumDuration>
                            </suspendOnFailure>
                            <markForSuspension>
                                <errorCodes>-1</errorCodes>
                            </markForSuspension>
                        </http>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>